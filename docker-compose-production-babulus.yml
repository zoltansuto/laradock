version: '3.5'

networks:
  frontend:
    driver: ${NETWORKS_DRIVER}
  backend:
    driver: ${NETWORKS_DRIVER}
  tr:
    external: true

volumes:
  redis:
    driver: ${VOLUMES_DRIVER}

services:
  ### PHP-FPM ##############################################
    php-fpm:
      build:
        context: ./php-fpm
        args:
          - CHANGE_SOURCE=${CHANGE_SOURCE}
          - BASE_IMAGE_TAG_PREFIX=${PHP_FPM_BASE_IMAGE_TAG_PREFIX}
          - LARADOCK_PHP_VERSION=${PHP_VERSION}
          - LARADOCK_PHALCON_VERSION=${PHALCON_VERSION}
          - INSTALL_BZ2=${PHP_FPM_INSTALL_BZ2}
          - INSTALL_ENCHANT=${PHP_FPM_INSTALL_ENCHANT}
          - INSTALL_GMP=${PHP_FPM_INSTALL_GMP}
          - INSTALL_GNUPG=${PHP_FPM_INSTALL_GNUPG}
          - INSTALL_XDEBUG=${PHP_FPM_INSTALL_XDEBUG}
          - XDEBUG_PORT=${PHP_FPM_XDEBUG_PORT}
          - INSTALL_PCOV=${PHP_FPM_INSTALL_PCOV}
          - INSTALL_PHPDBG=${PHP_FPM_INSTALL_PHPDBG}
          - INSTALL_BLACKFIRE=${INSTALL_BLACKFIRE}
          - INSTALL_SSH2=${PHP_FPM_INSTALL_SSH2}
          - INSTALL_SOAP=${PHP_FPM_INSTALL_SOAP}
          - INSTALL_XSL=${PHP_FPM_INSTALL_XSL}
          - INSTALL_SMB=${PHP_FPM_INSTALL_SMB}
          - INSTALL_IMAP=${PHP_FPM_INSTALL_IMAP}
          - INSTALL_MONGO=${PHP_FPM_INSTALL_MONGO}
          - INSTALL_AMQP=${PHP_FPM_INSTALL_AMQP}
          - INSTALL_CASSANDRA=${PHP_FPM_INSTALL_CASSANDRA}
          - INSTALL_ZMQ=${PHP_FPM_INSTALL_ZMQ}
          - INSTALL_GEARMAN=${PHP_FPM_INSTALL_GEARMAN}
          - INSTALL_MSSQL=${PHP_FPM_INSTALL_MSSQL}
          - INSTALL_BCMATH=${PHP_FPM_INSTALL_BCMATH}
          - INSTALL_PHPREDIS=${PHP_FPM_INSTALL_PHPREDIS}
          - INSTALL_MEMCACHED=${PHP_FPM_INSTALL_MEMCACHED}
          - INSTALL_OPCACHE=${PHP_FPM_INSTALL_OPCACHE}
          - INSTALL_EXIF=${PHP_FPM_INSTALL_EXIF}
          - INSTALL_AEROSPIKE=${PHP_FPM_INSTALL_AEROSPIKE}
          - INSTALL_OCI8=${PHP_FPM_INSTALL_OCI8}
          - INSTALL_MYSQLI=${PHP_FPM_INSTALL_MYSQLI}
          - INSTALL_PGSQL=${PHP_FPM_INSTALL_PGSQL}
          - INSTALL_PG_CLIENT=${PHP_FPM_INSTALL_PG_CLIENT}
          - INSTALL_POSTGIS=${PHP_FPM_INSTALL_POSTGIS}
          - INSTALL_INTL=${PHP_FPM_INSTALL_INTL}
          - INSTALL_GHOSTSCRIPT=${PHP_FPM_INSTALL_GHOSTSCRIPT}
          - INSTALL_LDAP=${PHP_FPM_INSTALL_LDAP}
          - INSTALL_PHALCON=${PHP_FPM_INSTALL_PHALCON}
          - INSTALL_SWOOLE=${PHP_FPM_INSTALL_SWOOLE}
          - INSTALL_TAINT=${PHP_FPM_INSTALL_TAINT}
          - INSTALL_IMAGE_OPTIMIZERS=${PHP_FPM_INSTALL_IMAGE_OPTIMIZERS}
          - INSTALL_IMAGEMAGICK=${PHP_FPM_INSTALL_IMAGEMAGICK}
          - INSTALL_CALENDAR=${PHP_FPM_INSTALL_CALENDAR}
          - INSTALL_XLSWRITER=${PHP_FPM_INSTALL_XLSWRITER}
          - INSTALL_FAKETIME=${PHP_FPM_INSTALL_FAKETIME}
          - INSTALL_IONCUBE=${PHP_FPM_INSTALL_IONCUBE}
          - INSTALL_APCU=${PHP_FPM_INSTALL_APCU}
          - INSTALL_CACHETOOL=${PHP_FPM_INSTALL_CACHETOOL}
          - INSTALL_YAML=${PHP_FPM_INSTALL_YAML}
          - INSTALL_RDKAFKA=${PHP_FPM_INSTALL_RDKAFKA}
          - INSTALL_GETTEXT=${PHP_FPM_INSTALL_GETTEXT}
          - INSTALL_ADDITIONAL_LOCALES=${PHP_FPM_INSTALL_ADDITIONAL_LOCALES}
          - INSTALL_MYSQL_CLIENT=${PHP_FPM_INSTALL_MYSQL_CLIENT}
          - INSTALL_PING=${PHP_FPM_INSTALL_PING}
          - INSTALL_SSHPASS=${PHP_FPM_INSTALL_SSHPASS}
          - INSTALL_MAILPARSE=${PHP_FPM_INSTALL_MAILPARSE}
          - INSTALL_PCNTL=${PHP_FPM_INSTALL_PCNTL}
          - ADDITIONAL_LOCALES=${PHP_FPM_ADDITIONAL_LOCALES}
          - INSTALL_FFMPEG=${PHP_FPM_FFMPEG}
          - INSTALL_AUDIOWAVEFORM=${PHP_FPM_AUDIOWAVEFORM}
          - INSTALL_WKHTMLTOPDF=${PHP_FPM_INSTALL_WKHTMLTOPDF}
          - WKHTMLTOPDF_VERSION=${WORKSPACE_WKHTMLTOPDF_VERSION}
          - INSTALL_XHPROF=${PHP_FPM_INSTALL_XHPROF}
          - INSTALL_XMLRPC=${PHP_FPM_INSTALL_XMLRPC}
          - INSTALL_PHPDECIMAL=${PHP_FPM_INSTALL_PHPDECIMAL}
          - INSTALL_ZOOKEEPER=${PHP_FPM_INSTALL_ZOOKEEPER}
          - INSTALL_SSDB=${PHP_FPM_INSTALL_SSDB}
          - INSTALL_TRADER=${PHP_FPM_INSTALL_TRADER}
          - INSTALL_EVENT=${PHP_FPM_INSTALL_EVENT}
          - DOWNGRADE_OPENSSL_TLS_AND_SECLEVEL=${PHP_DOWNGRADE_OPENSSL_TLS_AND_SECLEVEL}
          - DOWNGRADE_OPENSSL_TLS_VERSION=${PHP_DOWNGRADE_OPENSSL_TLS_VERSION}
          - PUID=${PHP_FPM_PUID}
          - PGID=${PHP_FPM_PGID}
          - IMAGEMAGICK_VERSION=${PHP_FPM_IMAGEMAGICK_VERSION}
          - LOCALE=${PHP_FPM_DEFAULT_LOCALE}
          - PHP_FPM_NEW_RELIC=${PHP_FPM_NEW_RELIC}
          - PHP_FPM_NEW_RELIC_KEY=${PHP_FPM_NEW_RELIC_KEY}
          - PHP_FPM_NEW_RELIC_APP_NAME=${PHP_FPM_NEW_RELIC_APP_NAME}
          - INSTALL_DOCKER_CLIENT=${PHP_FPM_INSTALL_DOCKER_CLIENT}
          - INSTALL_DNSUTILS=${PHP_FPM_INSTALL_DNSUTILS}
          - http_proxy
          - https_proxy
          - no_proxy
      user: "${PHP_FPM_PUID}:${PHP_FPM_PGID}"
      volumes:
        - ./php-fpm/php${PHP_VERSION}.ini:/usr/local/etc/php/php.ini
        - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}
        - /home/battlestar/salexa/storage:/home/battlestar/salexa/storage
        - /home/battlestar/salexa/.env:/home/battlestar/salexa/.env
      expose:
        - "9000"
      extra_hosts:
        - "dockerhost:${DOCKER_HOST_IP}"
      environment:
        - PHP_IDE_CONFIG=${PHP_IDE_CONFIG}
        - FAKETIME=${PHP_FPM_FAKETIME}
      networks:
        - backend
      depends_on:
        - mongo
        - redis-stack-server
      restart: unless-stopped

  ### PHP Worker ############################################
#    php-worker:
#      build:
#        context: ./php-worker
#        args:
#          - CHANGE_SOURCE=${CHANGE_SOURCE}
#          - LARADOCK_PHP_VERSION=${PHP_VERSION}
#          - PHALCON_VERSION=${PHALCON_VERSION}
#          - INSTALL_BZ2=${PHP_WORKER_INSTALL_BZ2}
#          - INSTALL_GD=${PHP_WORKER_INSTALL_GD}
#          - INSTALL_IMAGEMAGICK=${PHP_WORKER_INSTALL_IMAGEMAGICK}
#          - INSTALL_GMP=${PHP_WORKER_INSTALL_GMP}
#          - INSTALL_GNUPG=${PHP_WORKER_INSTALL_GNUPG}
#          - INSTALL_LDAP=${PHP_WORKER_INSTALL_LDAP}
#          - INSTALL_PGSQL=${PHP_WORKER_INSTALL_PGSQL}
#          - INSTALL_MONGO=${PHP_WORKER_INSTALL_MONGO}
#          - INSTALL_BCMATH=${PHP_WORKER_INSTALL_BCMATH}
#          - INSTALL_MEMCACHED=${PHP_WORKER_INSTALL_MEMCACHED}
#          - INSTALL_OCI8=${PHP_WORKER_INSTALL_OCI8}
#          - INSTALL_MSSQL=${PHP_WORKER_INSTALL_MSSQL}
#          - INSTALL_PHALCON=${PHP_WORKER_INSTALL_PHALCON}
#          - INSTALL_XLSWRITER=${PHP_WORKER_INSTALL_XLSWRITER}
#          - INSTALL_SOAP=${PHP_WORKER_INSTALL_SOAP}
#          - INSTALL_ZIP_ARCHIVE=${PHP_WORKER_INSTALL_ZIP_ARCHIVE}
#          - INSTALL_MYSQL_CLIENT=${PHP_WORKER_INSTALL_MYSQL_CLIENT}
#          - INSTALL_AMQP=${PHP_WORKER_INSTALL_AMQP}
#          - INSTALL_CASSANDRA=${PHP_WORKER_INSTALL_CASSANDRA}
#          - INSTALL_GEARMAN=${PHP_WORKER_INSTALL_GEARMAN}
#          - INSTALL_GHOSTSCRIPT=${PHP_WORKER_INSTALL_GHOSTSCRIPT}
#          - INSTALL_SWOOLE=${PHP_WORKER_INSTALL_SWOOLE}
#          - INSTALL_TAINT=${PHP_WORKER_INSTALL_TAINT}
#          - INSTALL_FFMPEG=${PHP_WORKER_INSTALL_FFMPEG}
#          - INSTALL_AUDIOWAVEFORM=${PHP_WORKER_INSTALL_AUDIOWAVEFORM}
#          - INSTALL_REDIS=${PHP_WORKER_INSTALL_REDIS}
#          - INSTALL_IMAP=${PHP_WORKER_INSTALL_IMAP}
#          - INSTALL_XMLRPC=${PHP_WORKER_INSTALL_XMLRPC}
#          - INSTALL_SSDB=${PHP_WORKER_INSTALL_SSDB}
#          - INSTALL_EVENT=${PHP_WORKER_INSTALL_EVENT}
#          - INSTALL_INTL=${PHP_WORKER_INSTALL_INTL}
#          - PUID=${PHP_WORKER_PUID}
#          - PGID=${PHP_WORKER_PGID}
#          - IMAGEMAGICK_VERSION=${PHP_WORKER_IMAGEMAGICK_VERSION}
#      user: "${PHP_WORKER_PUID}:${PHP_WORKER_PGID}"
#      volumes:
#        - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}
#        - ./php-worker/supervisord.d:/etc/supervisord.d
#        - /home/battlestar/salexa/storage:/home/battlestar/salexa/storage
#        - /home/battlestar/salexa/.env:/home/battlestar/salexa/.env
#      extra_hosts:
#        - "dockerhost:${DOCKER_HOST_IP}"
#      networks:
#        - backend
#      depends_on:
#        - mongo
#        - redis-stack-server
#      restart: unless-stopped

  ### NGINX Server #########################################
    nginx:
      build:
        context: ./nginx
        args:
          - CHANGE_SOURCE=${CHANGE_SOURCE}
          - PHP_UPSTREAM_CONTAINER=${NGINX_PHP_UPSTREAM_CONTAINER}
          - PHP_UPSTREAM_PORT=${NGINX_PHP_UPSTREAM_PORT}
          - http_proxy
          - https_proxy
          - no_proxy
      volumes:
        - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}
        - ${NGINX_HOST_LOG_PATH}:/var/log/nginx
        - ${NGINX_SITES_PATH}:/etc/nginx/sites-available
        - /home/battlestar/salexa/storage:/home/battlestar/salexa/storage
        - /home/battlestar/salexa/.env:/home/battlestar/salexa/.env
      depends_on:
        - php-fpm
      networks:
        - tr
        - frontend
        - backend
      restart: unless-stopped
      labels:
        - traefik.enable=true
        - traefik.docker.network=tr
        - traefik.http.routers.salexa.rule=Host(`salexa.fbarockets.hu`)
        - traefik.http.routers.salexa.entrypoints=websecure
        - traefik.http.routers.salexa.tls=true
        - traefik.http.routers.salexa.tls.certresolver=le

  ### MongoDB ##############################################
    mongo:
      build: ./mongo
      ports:
        - "${MONGODB_PORT}:27017"
      environment:
        - MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME}
        - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
      volumes:
        - ${DATA_PATH_HOST}/mongo:/data/db
        - ${DATA_PATH_HOST}/mongo_config:/data/configdb
      networks:
        - backend
      restart: unless-stopped

  ### MongoDB PHP GUI ######################################
    mongo-gui:
      image: samueltallet/mongodb-php-gui
      networks:
        - tr
        - backend
      restart: unless-stopped
      labels:
        - traefik.enable=true
        - traefik.docker.network=tr
        - traefik.http.routers.mongoadmin-salexa.rule=Host(`mongo-admin.salexa.battlestar.babulus.hu`)
        - traefik.http.services.mongoadmin-salexa.loadbalancer.server.port=5000
        - traefik.http.routers.mongoadmin-salexa.entrypoints=websecure
        - traefik.http.routers.mongoadmin-salexa.middlewares=chain-oauth@file
        - traefik.http.routers.mongoadmin-salexa.tls=true
        - traefik.http.routers.mongoadmin-salexa.tls.certresolver=le

  ### Redis Stack Server ###################################
    redis-stack-server:
      image: redis/redis-stack-server
      user: "${PHP_FPM_PUID}:${PHP_FPM_PGID}"
      volumes:
        - ${DATA_PATH_HOST}/redis:/data
      environment:
        - REDIS_ARGS=--requirepass ${REDIS_PASSWORD}
        - PUID=${PHP_FPM_PUID}
        - PGID=${PHP_FPM_PUID}
      networks:
        - backend
      restart: unless-stopped
